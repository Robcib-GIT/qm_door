<launch>
      <arg name="user_debug" default="false"/>
      <arg name="tunnel" default="tunnel4"/>

      <rosparam file="$(find qm_gazebo)/config/default.yaml" command="load"/>

      <!-- Load descriptions -->
      <param name="qm_description" command="$(find xacro)/xacro --inorder '$(find qm_description)/urdf/quadruped_manipulator/robot.xacro'
                  DEBUG:=$(arg user_debug)"/>
      <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find qm_description)/urdf/quadruped_manipulator/robot.xacro'
                  DEBUG:=$(arg user_debug)"/>
      <param name="legged_robot_description" command="$(find xacro)/xacro --inorder '$(find qm_description)/urdf/quadruped_manipulator/robot.xacro'
                  DEBUG:=$(arg user_debug)"/>
      <param name="terrain_description" command="$(find xacro)/xacro $(find qm_description)/urdf/tunnel/terrain.xacro"/>
      <param name="tunnel_description" command="$(find xacro)/xacro $(find qm_description)/urdf/tunnel/$(arg tunnel).xacro"/>

    <!-- Include empty Gazebo world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find qm_gazebo)/worlds/custom_world.world"/>
        <arg name="paused" value="true"/>
        <arg name="gui" value="true"/>
    </include>

      <!-- Start RViz -->
      <node name="rviz" pkg="rviz" type="rviz" args="-d $(find qm_controllers)/config/tunnel.rviz"/>

      <!-- Spawn robot in Gazebo -->
      <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" clear_params="true"
            output="screen"
            args="-param qm_description -urdf -model qm
            -x -2
            -z 0.5
            "
      />

      <!-- Spawn terrain in Gazebo -->
      <node name="spawn_terrain" pkg="gazebo_ros" type="spawn_model" clear_params="true"
            output="screen"
            args="-param terrain_description -urdf -model terrain
            -x 1 -y 0 -z 0 -R 1.570796 -P 0 -Y 1.570796"
      />
      <!-- Publish static transforms for the terrain -->
      <node pkg="tf2_ros" type="static_transform_publisher" name="terrain_tf_publisher"
            args="1 0 0 -1.570796 0 1.570796 world terrain_link"
      />

      <!-- Spawn tunnel in Gazebo -->
      <node name="spawn_tunnel" pkg="gazebo_ros" type="spawn_model" clear_params="true"
            output="screen"
            args="-param tunnel_description -urdf -model $(arg tunnel)
            -x 0.5 -y 0 -z 0 -R 1.570796 -P 0 -Y 1.570796"
      />
      <!-- Publish static transforms for the tunnel -->
      <node pkg="tf2_ros" type="static_transform_publisher" name="tunnel_tf_publisher"
            args="2 0 0 -1.570796 0 1.570796 world $(arg tunnel)_link"
      />

      <rosparam file="$(find qm_gazebo)/config/position_control.yaml" command="load"/>
      <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
            output="screen"
            args="
                  Joint01_controller Joint02_controller Joint03_controller
                  Joint04_controller Joint05_controller Joint06_controller
                  joint_state_controller
      "/>

      <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"
            respawn="false" output="screen">
      </node>

</launch>